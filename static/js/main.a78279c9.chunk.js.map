{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","good1","good2","localeCompare","length","reverse","App","useState","setIsReversed","setSortType","sortBy","type","className","classNames","onClick","ALPABET","LENGTH","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAK,EACH,OAAOI,EAAME,cAAcD,GAE7B,KAAK,EACH,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITN,GACFC,EAAaM,UAGRN,G,SAlCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAqCE,IAAMa,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOT,EAAP,KAAmBU,EAAnB,KACA,EAAgCD,mBAAS,GAAzC,mBAAOV,EAAP,KAAiBY,EAAjB,KAMMC,EAAS,SAACC,GACdF,EAAYE,IAQd,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UAAWC,IACT,iBACA,CAAE,WAAyB,IAAbhB,IAEhBiB,QAAS,kBAAMJ,EAAOjB,EAASsB,UANjC,iCAWA,wBACEJ,KAAK,SACLC,UAAWC,IACT,iBACA,CAAE,WAAyB,IAAbhB,IAEhBiB,QAAS,kBAAMJ,EAAOjB,EAASuB,SANjC,4BAWA,wBACEL,KAAK,SACLC,UAAWC,IACT,iBACA,CAAE,YAA2B,IAAff,IAEhBgB,QA5CQ,WACdN,GAAeV,IAqCX,sBAWe,IAAbD,GAAkBC,IAClB,wBACEa,KAAK,SACLC,UAAU,4BACVE,QA7CI,WACZN,GAAc,GACdC,EAAY,IAwCN,sBAUJ,6BACE,6BACGd,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CmB,KAAI,SAAAC,GAAI,OACP,6BAAgBA,GAAPA,cCxHvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a78279c9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case 1:\n        return good1.localeCompare(good2);\n\n      case 2:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(0);\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const sortBy = (type: number) => {\n    setSortType(type);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(0);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== 1 },\n          )}\n          onClick={() => sortBy(SortType.ALPABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== 2 },\n          )}\n          onClick={() => sortBy(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': isReversed === false },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== 0 || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n            .map(good => (\n              <li key={good}>{good}</li>\n            ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}